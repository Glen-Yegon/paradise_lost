var level0Optimize=require("./optimizer/level-0/optimize"),level1Optimize=require("./optimizer/level-1/optimize"),level2Optimize=require("./optimizer/level-2/optimize"),validator=require("./optimizer/validator"),compatibilityFrom=require("./options/compatibility"),fetchFrom=require("./options/fetch"),formatFrom=require("./options/format").formatFrom,inlineFrom=require("./options/inline"),inlineRequestFrom=require("./options/inline-request"),inlineTimeoutFrom=require("./options/inline-timeout"),OptimizationLevel=require("./options/optimization-level").OptimizationLevel,optimizationLevelFrom=require("./options/optimization-level").optimizationLevelFrom,pluginsFrom=require("./options/plugins"),rebaseFrom=require("./options/rebase"),rebaseToFrom=require("./options/rebase-to"),inputSourceMapTracker=require("./reader/input-source-map-tracker"),readSources=require("./reader/read-sources"),serializeStyles=require("./writer/simple"),serializeStylesAndSourceMap=require("./writer/source-maps"),CleanCSS=module.exports=function(e){e=e||{},this.options={batch:!!e.batch,compatibility:compatibilityFrom(e.compatibility),explicitRebaseTo:"rebaseTo"in e,fetch:fetchFrom(e.fetch),format:formatFrom(e.format),inline:inlineFrom(e.inline),inlineRequest:inlineRequestFrom(e.inlineRequest),inlineTimeout:inlineTimeoutFrom(e.inlineTimeout),level:optimizationLevelFrom(e.level),plugins:pluginsFrom(e.plugins),rebase:rebaseFrom(e.rebase,e.rebaseTo),rebaseTo:rebaseToFrom(e.rebaseTo),returnPromise:!!e.returnPromise,sourceMap:!!e.sourceMap,sourceMapInlineSources:!!e.sourceMapInlineSources}};function minifyAll(e,i,t,r){return i.batch&&Array.isArray(e)?minifyInBatchesFromArray(e,i,t,r):i.batch&&"object"==typeof e?minifyInBatchesFromHash(e,i,t,r):minify(e,i,t,r)}function minifyInBatchesFromArray(e,i,t,r){var n,o,a,s="function"==typeof r?r:"function"==typeof t?t:null,l=[],u={};function c(e,i){u=Object.assign(u,i),null!==e&&(l=l.concat(e))}for(o=0,a=e.length;o<a;o++)"object"==typeof e[o]?minifyInBatchesFromHash(e[o],i,c):(n=e[o],u[n]=minify([n],i),l=l.concat(u[n].errors));return s?s(l.length>0?l:null,u):u}function minifyInBatchesFromHash(e,i,t,r){var n,o,a="function"==typeof r?r:"function"==typeof t?t:null,s=[],l={};for(n in e)o=e[n],l[n]=minify(o.styles,i,o.sourceMap),s=s.concat(l[n].errors);return a?a(s.length>0?s:null,l):l}function minify(e,i,t,r){var n="function"!=typeof t?t:null,o="function"==typeof r?r:"function"==typeof t?t:null,a={stats:{efficiency:0,minifiedSize:0,originalSize:0,startedAt:Date.now(),timeSpent:0},cache:{specificity:{}},errors:[],inlinedStylesheets:[],inputSourceMapTracker:inputSourceMapTracker(),localOnly:!o,options:i,source:null,sourcesContent:{},validator:validator(i.compatibility),warnings:[]};return n&&a.inputSourceMapTracker.track(void 0,n),i.rebase&&!i.explicitRebaseTo&&a.warnings.push("You have set `rebase: true` without giving `rebaseTo` option, which, in this case, defaults to the current working directory. You are then warned this can lead to unexpected URL rebasing (aka here be dragons)! If you are OK with the clean-css output, then you can get rid of this warning by giving clean-css a `rebaseTo: process.cwd()` option."),runner(a.localOnly)(function(){return readSources(e,a,function(e){var i=withMetadata((a.options.sourceMap?serializeStylesAndSourceMap:serializeStyles)(optimize(e,a),a),a);return o?o(a.errors.length>0?a.errors:null,i):i})})}function runner(e){return e?function(e){return e()}:process.nextTick}function optimize(e,i){var t=level0Optimize(e,i);return t=OptimizationLevel.One in i.options.level?level1Optimize(e,i):e,t=OptimizationLevel.Two in i.options.level?level2Optimize(e,i,!0):t}function withMetadata(e,i){return e.stats=calculateStatsFrom(e.styles,i),e.errors=i.errors,e.inlinedStylesheets=i.inlinedStylesheets,e.warnings=i.warnings,e}function calculateStatsFrom(e,i){var t=Date.now()-i.stats.startedAt;return delete i.stats.startedAt,i.stats.timeSpent=t,i.stats.efficiency=1-e.length/i.stats.originalSize,i.stats.minifiedSize=e.length,i.stats}CleanCSS.process=function(e,i){var t=i.to;return delete i.to,new CleanCSS(Object.assign({returnPromise:!0,rebaseTo:t},i)).minify(e).then(function(e){return{css:e.styles}})},CleanCSS.prototype.minify=function(e,i,t){var r=this.options;return r.returnPromise?new Promise(function(t,n){minifyAll(e,r,i,function(e,i){return e?n(e):t(i)})}):minifyAll(e,r,i,t)};