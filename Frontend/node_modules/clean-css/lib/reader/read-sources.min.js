var fs=require("fs"),path=require("path"),applySourceMaps=require("./apply-source-maps"),extractImportUrlAndMedia=require("./extract-import-url-and-media"),isAllowedResource=require("./is-allowed-resource"),loadOriginalSources=require("./load-original-sources"),normalizePath=require("./normalize-path"),rebase=require("./rebase"),rebaseLocalMap=require("./rebase-local-map"),rebaseRemoteMap=require("./rebase-remote-map"),restoreImport=require("./restore-import"),tokenize=require("../tokenizer/tokenize"),Token=require("../tokenizer/token"),Marker=require("../tokenizer/marker"),hasProtocol=require("../utils/has-protocol"),isImport=require("../utils/is-import"),isRemoteResource=require("../utils/is-remote-resource"),UNKNOWN_URI="uri:unknown",FILE_RESOURCE_PROTOCOL="file://";function readSources(e,o,r){return doReadSources(e,o,function(e){return applySourceMaps(e,o,function(){return loadOriginalSources(o,function(){return r(e)})})})}function doReadSources(e,o,r){return"string"==typeof e?fromString(e,o,r):Buffer.isBuffer(e)?fromString(e.toString(),o,r):Array.isArray(e)?fromArray(e,o,r):"object"==typeof e?fromHash(e,o,r):void 0}function fromString(e,o,r){return o.source=void 0,o.sourcesContent[void 0]=e,o.stats.originalSize+=e.length,fromStyles(e,o,{inline:o.options.inline},r)}function fromArray(e,o,r){return fromStyles(e.reduce(function(e,r){return"string"==typeof r?addStringSource(r,e):addHashSource(r,o,e)},[]).join(""),o,{inline:["all"]},r)}function fromHash(e,o,r){return fromStyles(addHashSource(e,o,[]).join(""),o,{inline:["all"]},r)}function addStringSource(e,o){return o.push(restoreAsImport(normalizeUri(e))),o}function addHashSource(e,o,r){var n,t,s;for(n in e)s=e[n],t=normalizeUri(n),r.push(restoreAsImport(t)),o.sourcesContent[t]=s.styles,s.sourceMap&&trackSourceMap(s.sourceMap,t,o);return r}function normalizeUri(e){var o,r,n=path.resolve("");return isRemoteResource(e)?e:(o=path.isAbsolute(e)?e:path.resolve(e),r=path.relative(n,o),normalizePath(r))}function trackSourceMap(e,o,r){var n="string"==typeof e?JSON.parse(e):e,t=isRemoteResource(o)?rebaseRemoteMap(n,o):rebaseLocalMap(n,o||UNKNOWN_URI,r.options.rebaseTo);r.inputSourceMapTracker.track(o,t)}function restoreAsImport(e){return restoreImport("url("+e+")","")+Marker.SEMICOLON}function fromStyles(e,o,r,n){var t,s={};return o.source?isRemoteResource(o.source)?(s.fromBase=o.source,s.toBase=o.source):path.isAbsolute(o.source)?(s.fromBase=path.dirname(o.source),s.toBase=o.options.rebaseTo):(s.fromBase=path.dirname(path.resolve(o.source)),s.toBase=o.options.rebaseTo):(s.fromBase=path.resolve(""),s.toBase=o.options.rebaseTo),t=tokenize(e,o),t=rebase(t,o.options.rebase,o.validator,s),allowsAnyImports(r.inline)?inline(t,o,r,n):n(t)}function allowsAnyImports(e){return!(1==e.length&&"none"==e[0])}function inline(e,o,r,n){return doInlineImports({afterContent:!1,callback:n,errors:o.errors,externalContext:o,fetch:o.options.fetch,inlinedStylesheets:r.inlinedStylesheets||o.inlinedStylesheets,inline:r.inline,inlineRequest:o.options.inlineRequest,inlineTimeout:o.options.inlineTimeout,isRemote:r.isRemote||!1,localOnly:o.localOnly,outputTokens:[],rebaseTo:o.options.rebaseTo,sourceTokens:e,warnings:o.warnings})}function doInlineImports(e){var o,r,n;for(r=0,n=e.sourceTokens.length;r<n;r++){if((o=e.sourceTokens[r])[0]==Token.AT_RULE&&isImport(o[1]))return e.sourceTokens.splice(0,r),inlineStylesheet(o,e);o[0]==Token.AT_RULE||o[0]==Token.COMMENT?e.outputTokens.push(o):(e.outputTokens.push(o),e.afterContent=!0)}return e.sourceTokens=[],e.callback(e.outputTokens)}function inlineStylesheet(e,o){var r=extractImportUrlAndMedia(e[1]),n=r[0],t=r[1],s=e[2];return isRemoteResource(n)?inlineRemoteStylesheet(n,t,s,o):inlineLocalStylesheet(n,t,s,o)}function inlineRemoteStylesheet(e,o,r,n){var t=isAllowedResource(e,!0,n.inline),s=e,i=e in n.externalContext.sourcesContent,a=!hasProtocol(e);if(n.inlinedStylesheets.indexOf(e)>-1)return n.warnings.push('Ignoring remote @import of "'+e+'" as it has already been imported.'),n.sourceTokens=n.sourceTokens.slice(1),doInlineImports(n);if(n.localOnly&&n.afterContent)return n.warnings.push('Ignoring remote @import of "'+e+'" as no callback given and after other content.'),n.sourceTokens=n.sourceTokens.slice(1),doInlineImports(n);if(a)return n.warnings.push('Skipping remote @import of "'+e+'" as no protocol given.'),n.outputTokens=n.outputTokens.concat(n.sourceTokens.slice(0,1)),n.sourceTokens=n.sourceTokens.slice(1),doInlineImports(n);if(n.localOnly&&!i)return n.warnings.push('Skipping remote @import of "'+e+'" as no callback given.'),n.outputTokens=n.outputTokens.concat(n.sourceTokens.slice(0,1)),n.sourceTokens=n.sourceTokens.slice(1),doInlineImports(n);if(!t&&n.afterContent)return n.warnings.push('Ignoring remote @import of "'+e+'" as resource is not allowed and after other content.'),n.sourceTokens=n.sourceTokens.slice(1),doInlineImports(n);if(!t)return n.warnings.push('Skipping remote @import of "'+e+'" as resource is not allowed.'),n.outputTokens=n.outputTokens.concat(n.sourceTokens.slice(0,1)),n.sourceTokens=n.sourceTokens.slice(1),doInlineImports(n);function u(t,i){return t?(n.errors.push('Broken @import declaration of "'+e+'" - '+t),process.nextTick(function(){n.outputTokens=n.outputTokens.concat(n.sourceTokens.slice(0,1)),n.sourceTokens=n.sourceTokens.slice(1),doInlineImports(n)})):(n.inline=n.externalContext.options.inline,n.isRemote=!0,n.externalContext.source=s,n.externalContext.sourcesContent[e]=i,n.externalContext.stats.originalSize+=i.length,fromStyles(i,n.externalContext,n,function(e){return e=wrapInMedia(e,o,r),n.outputTokens=n.outputTokens.concat(e),n.sourceTokens=n.sourceTokens.slice(1),doInlineImports(n)}))}return n.inlinedStylesheets.push(e),i?u(null,n.externalContext.sourcesContent[e]):n.fetch(e,n.inlineRequest,n.inlineTimeout,u)}function inlineLocalStylesheet(e,o,r,n){var t,s=e.replace(FILE_RESOURCE_PROTOCOL,""),i=path.resolve(""),a=path.isAbsolute(s)?path.resolve(i,"/"==s[0]?s.substring(1):s):path.resolve(n.rebaseTo,s),u=path.relative(i,a),l=isAllowedResource(s,!1,n.inline),c=normalizePath(u),p=c in n.externalContext.sourcesContent;if(n.inlinedStylesheets.indexOf(a)>-1)n.warnings.push('Ignoring local @import of "'+s+'" as it has already been imported.');else if(!l||p||fs.existsSync(a)&&fs.statSync(a).isFile())if(!l&&n.afterContent)n.warnings.push('Ignoring local @import of "'+s+'" as resource is not allowed and after other content.');else if(n.afterContent)n.warnings.push('Ignoring local @import of "'+s+'" as after other content.');else{if(l)return 65279===(t=p?n.externalContext.sourcesContent[c]:fs.readFileSync(a,"utf-8")).charCodeAt(0)&&(t=t.substring(1)),n.inlinedStylesheets.push(a),n.inline=n.externalContext.options.inline,n.externalContext.source=c,n.externalContext.sourcesContent[c]=t,n.externalContext.stats.originalSize+=t.length,fromStyles(t,n.externalContext,n,function(e){return e=wrapInMedia(e,o,r),n.outputTokens=n.outputTokens.concat(e),n.sourceTokens=n.sourceTokens.slice(1),doInlineImports(n)});n.warnings.push('Skipping local @import of "'+s+'" as resource is not allowed.'),n.outputTokens=n.outputTokens.concat(n.sourceTokens.slice(0,1))}else n.errors.push('Ignoring local @import of "'+s+'" as resource is missing.');return n.sourceTokens=n.sourceTokens.slice(1),doInlineImports(n)}function wrapInMedia(e,o,r){return o?[[Token.NESTED_BLOCK,[[Token.NESTED_BLOCK_SCOPE,"@media "+o,r]],e]]:e}module.exports=readSources;