const perf="object"==typeof performance&&performance&&"function"==typeof performance.now?performance:Date,warned=new Set,PROCESS="object"==typeof process&&process?process:{},emitWarning=(t,e,i,s)=>{"function"==typeof PROCESS.emitWarning?PROCESS.emitWarning(t,e,i,s):console.error(`[${i}] ${e}: ${t}`)};let AC=globalThis.AbortController,AS=globalThis.AbortSignal;if(void 0===AC){AS=class{onabort;_onabort=[];reason;aborted=!1;addEventListener(t,e){this._onabort.push(e)}},AC=class{constructor(){e()}signal=new AS;abort(t){if(!this.signal.aborted){this.signal.reason=t,this.signal.aborted=!0;for(const e of this.signal._onabort)e(t);this.signal.onabort?.(t)}}};let t="1"!==PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING;const e=()=>{t&&(t=!1,emitWarning("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.","NO_ABORT_CONTROLLER","ENOTSUP",e))}}const shouldWarn=t=>!warned.has(t),TYPE=Symbol("type"),isPosInt=t=>t&&t===Math.floor(t)&&t>0&&isFinite(t),getUintArray=t=>isPosInt(t)?t<=Math.pow(2,8)?Uint8Array:t<=Math.pow(2,16)?Uint16Array:t<=Math.pow(2,32)?Uint32Array:t<=Number.MAX_SAFE_INTEGER?ZeroArray:null:null;class ZeroArray extends Array{constructor(t){super(t),this.fill(0)}}class Stack{heap;length;static#t=!1;static create(t){const e=getUintArray(t);if(!e)return[];Stack.#t=!0;const i=new Stack(t,e);return Stack.#t=!1,i}constructor(t,e){if(!Stack.#t)throw new TypeError("instantiate Stack using Stack.create(n)");this.heap=new e(t),this.length=0}push(t){this.heap[this.length++]=t}pop(){return this.heap[--this.length]}}export class LRUCache{#e;#i;#s;#o;#h;#n;#a;ttl;ttlResolution;ttlAutopurge;updateAgeOnGet;updateAgeOnHas;allowStale;noDisposeOnSet;noUpdateTTL;maxEntrySize;sizeCalculation;noDeleteOnFetchRejection;noDeleteOnStaleGet;allowStaleOnFetchAbort;allowStaleOnFetchRejection;ignoreFetchAbort;#r;#l;#c;#d;#u;#f;#p;#g;#v;#S;#m;#y;#z;#w;#A;#L;#F;#x;static unsafeExposeInternals(t){return{starts:t.#z,ttls:t.#w,sizes:t.#y,keyMap:t.#c,keyList:t.#d,valList:t.#u,next:t.#f,prev:t.#p,get head(){return t.#g},get tail(){return t.#v},free:t.#S,isBackgroundFetch:e=>t.#k(e),backgroundFetch:(e,i,s,o)=>t.#T(e,i,s,o),moveToTail:e=>t.#_(e),indexes:e=>t.#b(e),rindexes:e=>t.#O(e),isStale:e=>t.#E(e)}}get max(){return this.#e}get maxSize(){return this.#i}get calculatedSize(){return this.#l}get size(){return this.#r}get fetchMethod(){return this.#n}get memoMethod(){return this.#a}get dispose(){return this.#s}get onInsert(){return this.#o}get disposeAfter(){return this.#h}constructor(t){const{max:e=0,ttl:i,ttlResolution:s=1,ttlAutopurge:o,updateAgeOnGet:h,updateAgeOnHas:n,allowStale:a,dispose:r,onInsert:l,disposeAfter:c,noDisposeOnSet:d,noUpdateTTL:u,maxSize:f=0,maxEntrySize:p=0,sizeCalculation:g,fetchMethod:v,memoMethod:S,noDeleteOnFetchRejection:m,noDeleteOnStaleGet:y,allowStaleOnFetchRejection:z,allowStaleOnFetchAbort:w,ignoreFetchAbort:A}=t;if(0!==e&&!isPosInt(e))throw new TypeError("max option must be a nonnegative integer");const L=e?getUintArray(e):Array;if(!L)throw new Error("invalid max value: "+e);if(this.#e=e,this.#i=f,this.maxEntrySize=p||this.#i,this.sizeCalculation=g,this.sizeCalculation){if(!this.#i&&!this.maxEntrySize)throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");if("function"!=typeof this.sizeCalculation)throw new TypeError("sizeCalculation set to non-function")}if(void 0!==S&&"function"!=typeof S)throw new TypeError("memoMethod must be a function if defined");if(this.#a=S,void 0!==v&&"function"!=typeof v)throw new TypeError("fetchMethod must be a function if specified");if(this.#n=v,this.#L=!!v,this.#c=new Map,this.#d=new Array(e).fill(void 0),this.#u=new Array(e).fill(void 0),this.#f=new L(e),this.#p=new L(e),this.#g=0,this.#v=0,this.#S=Stack.create(e),this.#r=0,this.#l=0,"function"==typeof r&&(this.#s=r),"function"==typeof l&&(this.#o=l),"function"==typeof c?(this.#h=c,this.#m=[]):(this.#h=void 0,this.#m=void 0),this.#A=!!this.#s,this.#x=!!this.#o,this.#F=!!this.#h,this.noDisposeOnSet=!!d,this.noUpdateTTL=!!u,this.noDeleteOnFetchRejection=!!m,this.allowStaleOnFetchRejection=!!z,this.allowStaleOnFetchAbort=!!w,this.ignoreFetchAbort=!!A,0!==this.maxEntrySize){if(0!==this.#i&&!isPosInt(this.#i))throw new TypeError("maxSize must be a positive integer if specified");if(!isPosInt(this.maxEntrySize))throw new TypeError("maxEntrySize must be a positive integer if specified");this.#D()}if(this.allowStale=!!a,this.noDeleteOnStaleGet=!!y,this.updateAgeOnGet=!!h,this.updateAgeOnHas=!!n,this.ttlResolution=isPosInt(s)||0===s?s:1,this.ttlAutopurge=!!o,this.ttl=i||0,this.ttl){if(!isPosInt(this.ttl))throw new TypeError("ttl must be a positive integer if specified");this.#I()}if(0===this.#e&&0===this.ttl&&0===this.#i)throw new TypeError("At least one of max, maxSize, or ttl is required");if(!this.ttlAutopurge&&!this.#e&&!this.#i){const t="LRU_CACHE_UNBOUNDED";if(shouldWarn(t)){warned.add(t);emitWarning("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.","UnboundedCacheWarning",t,LRUCache)}}}getRemainingTTL(t){return this.#c.has(t)?1/0:0}#I(){const t=new ZeroArray(this.#e),e=new ZeroArray(this.#e);this.#w=t,this.#z=e,this.#C=(i,s,o=perf.now())=>{if(e[i]=0!==s?o:0,t[i]=s,0!==s&&this.ttlAutopurge){const t=setTimeout(()=>{this.#E(i)&&this.#M(this.#d[i],"expire")},s+1);t.unref&&t.unref()}},this.#R=i=>{e[i]=0!==t[i]?perf.now():0},this.#W=(o,h)=>{if(t[h]){const n=t[h],a=e[h];if(!n||!a)return;o.ttl=n,o.start=a,o.now=i||s();const r=o.now-a;o.remainingTTL=n-r}};let i=0;const s=()=>{const t=perf.now();if(this.ttlResolution>0){i=t;const e=setTimeout(()=>i=0,this.ttlResolution);e.unref&&e.unref()}return t};this.getRemainingTTL=o=>{const h=this.#c.get(o);if(void 0===h)return 0;const n=t[h],a=e[h];if(!n||!a)return 1/0;return n-((i||s())-a)},this.#E=o=>{const h=e[o],n=t[o];return!!n&&!!h&&(i||s())-h>n}}#R=()=>{};#W=()=>{};#C=()=>{};#E=()=>!1;#D(){const t=new ZeroArray(this.#e);this.#l=0,this.#y=t,this.#B=e=>{this.#l-=t[e],t[e]=0},this.#U=(t,e,i,s)=>{if(this.#k(e))return 0;if(!isPosInt(i)){if(!s)throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");if("function"!=typeof s)throw new TypeError("sizeCalculation must be a function");if(i=s(e,t),!isPosInt(i))throw new TypeError("sizeCalculation return invalid (expect positive integer)")}return i},this.#G=(e,i,s)=>{if(t[e]=i,this.#i){const i=this.#i-t[e];for(;this.#l>i;)this.#P(!0)}this.#l+=t[e],s&&(s.entrySize=i,s.totalCalculatedSize=this.#l)}}#B=t=>{};#G=(t,e,i)=>{};#U=(t,e,i,s)=>{if(i||s)throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");return 0};*#b({allowStale:t=this.allowStale}={}){if(this.#r)for(let e=this.#v;this.#j(e)&&(!t&&this.#E(e)||(yield e),e!==this.#g);)e=this.#p[e]}*#O({allowStale:t=this.allowStale}={}){if(this.#r)for(let e=this.#g;this.#j(e)&&(!t&&this.#E(e)||(yield e),e!==this.#v);)e=this.#f[e]}#j(t){return void 0!==t&&this.#c.get(this.#d[t])===t}*entries(){for(const t of this.#b())void 0===this.#u[t]||void 0===this.#d[t]||this.#k(this.#u[t])||(yield[this.#d[t],this.#u[t]])}*rentries(){for(const t of this.#O())void 0===this.#u[t]||void 0===this.#d[t]||this.#k(this.#u[t])||(yield[this.#d[t],this.#u[t]])}*keys(){for(const t of this.#b()){const e=this.#d[t];void 0===e||this.#k(this.#u[t])||(yield e)}}*rkeys(){for(const t of this.#O()){const e=this.#d[t];void 0===e||this.#k(this.#u[t])||(yield e)}}*values(){for(const t of this.#b()){void 0===this.#u[t]||this.#k(this.#u[t])||(yield this.#u[t])}}*rvalues(){for(const t of this.#O()){void 0===this.#u[t]||this.#k(this.#u[t])||(yield this.#u[t])}}[Symbol.iterator](){return this.entries()}[Symbol.toStringTag]="LRUCache";find(t,e={}){for(const i of this.#b()){const s=this.#u[i],o=this.#k(s)?s.__staleWhileFetching:s;if(void 0!==o&&t(o,this.#d[i],this))return this.get(this.#d[i],e)}}forEach(t,e=this){for(const i of this.#b()){const s=this.#u[i],o=this.#k(s)?s.__staleWhileFetching:s;void 0!==o&&t.call(e,o,this.#d[i],this)}}rforEach(t,e=this){for(const i of this.#O()){const s=this.#u[i],o=this.#k(s)?s.__staleWhileFetching:s;void 0!==o&&t.call(e,o,this.#d[i],this)}}purgeStale(){let t=!1;for(const e of this.#O({allowStale:!0}))this.#E(e)&&(this.#M(this.#d[e],"expire"),t=!0);return t}info(t){const e=this.#c.get(t);if(void 0===e)return;const i=this.#u[e],s=this.#k(i)?i.__staleWhileFetching:i;if(void 0===s)return;const o={value:s};if(this.#w&&this.#z){const t=this.#w[e],i=this.#z[e];if(t&&i){const e=t-(perf.now()-i);o.ttl=e,o.start=Date.now()}}return this.#y&&(o.size=this.#y[e]),o}dump(){const t=[];for(const e of this.#b({allowStale:!0})){const i=this.#d[e],s=this.#u[e],o=this.#k(s)?s.__staleWhileFetching:s;if(void 0===o||void 0===i)continue;const h={value:o};if(this.#w&&this.#z){h.ttl=this.#w[e];const t=perf.now()-this.#z[e];h.start=Math.floor(Date.now()-t)}this.#y&&(h.size=this.#y[e]),t.unshift([i,h])}return t}load(t){this.clear();for(const[e,i]of t){if(i.start){const t=Date.now()-i.start;i.start=perf.now()-t}this.set(e,i.value,i)}}set(t,e,i={}){if(void 0===e)return this.delete(t),this;const{ttl:s=this.ttl,start:o,noDisposeOnSet:h=this.noDisposeOnSet,sizeCalculation:n=this.sizeCalculation,status:a}=i;let{noUpdateTTL:r=this.noUpdateTTL}=i;const l=this.#U(t,e,i.size||0,n);if(this.maxEntrySize&&l>this.maxEntrySize)return a&&(a.set="miss",a.maxEntrySizeExceeded=!0),this.#M(t,"set"),this;let c=0===this.#r?void 0:this.#c.get(t);if(void 0===c)c=0===this.#r?this.#v:0!==this.#S.length?this.#S.pop():this.#r===this.#e?this.#P(!1):this.#r,this.#d[c]=t,this.#u[c]=e,this.#c.set(t,c),this.#f[this.#v]=c,this.#p[c]=this.#v,this.#v=c,this.#r++,this.#G(c,l,a),a&&(a.set="add"),r=!1,this.#x&&this.#o?.(e,t,"add");else{this.#_(c);const i=this.#u[c];if(e!==i){if(this.#L&&this.#k(i)){i.__abortController.abort(new Error("replaced"));const{__staleWhileFetching:e}=i;void 0===e||h||(this.#A&&this.#s?.(e,t,"set"),this.#F&&this.#m?.push([e,t,"set"]))}else h||(this.#A&&this.#s?.(i,t,"set"),this.#F&&this.#m?.push([i,t,"set"]));if(this.#B(c),this.#G(c,l,a),this.#u[c]=e,a){a.set="replace";const t=i&&this.#k(i)?i.__staleWhileFetching:i;void 0!==t&&(a.oldValue=t)}}else a&&(a.set="update");this.#x&&this.onInsert?.(e,t,e===i?"update":"replace")}if(0===s||this.#w||this.#I(),this.#w&&(r||this.#C(c,s,o),a&&this.#W(a,c)),!h&&this.#F&&this.#m){const t=this.#m;let e;for(;e=t?.shift();)this.#h?.(...e)}return this}pop(){try{for(;this.#r;){const t=this.#u[this.#g];if(this.#P(!0),this.#k(t)){if(t.__staleWhileFetching)return t.__staleWhileFetching}else if(void 0!==t)return t}}finally{if(this.#F&&this.#m){const t=this.#m;let e;for(;e=t?.shift();)this.#h?.(...e)}}}#P(t){const e=this.#g,i=this.#d[e],s=this.#u[e];return this.#L&&this.#k(s)?s.__abortController.abort(new Error("evicted")):(this.#A||this.#F)&&(this.#A&&this.#s?.(s,i,"evict"),this.#F&&this.#m?.push([s,i,"evict"])),this.#B(e),t&&(this.#d[e]=void 0,this.#u[e]=void 0,this.#S.push(e)),1===this.#r?(this.#g=this.#v=0,this.#S.length=0):this.#g=this.#f[e],this.#c.delete(i),this.#r--,e}has(t,e={}){const{updateAgeOnHas:i=this.updateAgeOnHas,status:s}=e,o=this.#c.get(t);if(void 0!==o){const t=this.#u[o];if(this.#k(t)&&void 0===t.__staleWhileFetching)return!1;if(!this.#E(o))return i&&this.#R(o),s&&(s.has="hit",this.#W(s,o)),!0;s&&(s.has="stale",this.#W(s,o))}else s&&(s.has="miss");return!1}peek(t,e={}){const{allowStale:i=this.allowStale}=e,s=this.#c.get(t);if(void 0===s||!i&&this.#E(s))return;const o=this.#u[s];return this.#k(o)?o.__staleWhileFetching:o}#T(t,e,i,s){const o=void 0===e?void 0:this.#u[e];if(this.#k(o))return o;const h=new AC,{signal:n}=i;n?.addEventListener("abort",()=>h.abort(n.reason),{signal:h.signal});const a={signal:h.signal,options:i,context:s},r=(s,o=!1)=>{const{aborted:n}=h.signal,r=i.ignoreFetchAbort&&void 0!==s;if(i.status&&(n&&!o?(i.status.fetchAborted=!0,i.status.fetchError=h.signal.reason,r&&(i.status.fetchAbortIgnored=!0)):i.status.fetchResolved=!0),n&&!r&&!o)return l(h.signal.reason);const d=c;return this.#u[e]===c&&(void 0===s?d.__staleWhileFetching?this.#u[e]=d.__staleWhileFetching:this.#M(t,"fetch"):(i.status&&(i.status.fetchUpdated=!0),this.set(t,s,a.options))),s},l=s=>{const{aborted:o}=h.signal,n=o&&i.allowStaleOnFetchAbort,a=n||i.allowStaleOnFetchRejection,r=a||i.noDeleteOnFetchRejection,l=c;if(this.#u[e]===c){!r||void 0===l.__staleWhileFetching?this.#M(t,"fetch"):n||(this.#u[e]=l.__staleWhileFetching)}if(a)return i.status&&void 0!==l.__staleWhileFetching&&(i.status.returnedStale=!0),l.__staleWhileFetching;if(l.__returned===l)throw s};i.status&&(i.status.fetchDispatched=!0);const c=new Promise((e,s)=>{const n=this.#n?.(t,o,a);n&&n instanceof Promise&&n.then(t=>e(void 0===t?void 0:t),s),h.signal.addEventListener("abort",()=>{i.ignoreFetchAbort&&!i.allowStaleOnFetchAbort||(e(void 0),i.allowStaleOnFetchAbort&&(e=t=>r(t,!0)))})}).then(r,t=>(i.status&&(i.status.fetchRejected=!0,i.status.fetchError=t),l(t))),d=Object.assign(c,{__abortController:h,__staleWhileFetching:o,__returned:void 0});return void 0===e?(this.set(t,d,{...a.options,status:void 0}),e=this.#c.get(t)):this.#u[e]=d,d}#k(t){if(!this.#L)return!1;const e=t;return!!e&&e instanceof Promise&&e.hasOwnProperty("__staleWhileFetching")&&e.__abortController instanceof AC}async fetch(t,e={}){const{allowStale:i=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:o=this.noDeleteOnStaleGet,ttl:h=this.ttl,noDisposeOnSet:n=this.noDisposeOnSet,size:a=0,sizeCalculation:r=this.sizeCalculation,noUpdateTTL:l=this.noUpdateTTL,noDeleteOnFetchRejection:c=this.noDeleteOnFetchRejection,allowStaleOnFetchRejection:d=this.allowStaleOnFetchRejection,ignoreFetchAbort:u=this.ignoreFetchAbort,allowStaleOnFetchAbort:f=this.allowStaleOnFetchAbort,context:p,forceRefresh:g=!1,status:v,signal:S}=e;if(!this.#L)return v&&(v.fetch="get"),this.get(t,{allowStale:i,updateAgeOnGet:s,noDeleteOnStaleGet:o,status:v});const m={allowStale:i,updateAgeOnGet:s,noDeleteOnStaleGet:o,ttl:h,noDisposeOnSet:n,size:a,sizeCalculation:r,noUpdateTTL:l,noDeleteOnFetchRejection:c,allowStaleOnFetchRejection:d,allowStaleOnFetchAbort:f,ignoreFetchAbort:u,status:v,signal:S};let y=this.#c.get(t);if(void 0===y){v&&(v.fetch="miss");const e=this.#T(t,y,m,p);return e.__returned=e}{const e=this.#u[y];if(this.#k(e)){const t=i&&void 0!==e.__staleWhileFetching;return v&&(v.fetch="inflight",t&&(v.returnedStale=!0)),t?e.__staleWhileFetching:e.__returned=e}const o=this.#E(y);if(!g&&!o)return v&&(v.fetch="hit"),this.#_(y),s&&this.#R(y),v&&this.#W(v,y),e;const h=this.#T(t,y,m,p),n=void 0!==h.__staleWhileFetching&&i;return v&&(v.fetch=o?"stale":"refresh",n&&o&&(v.returnedStale=!0)),n?h.__staleWhileFetching:h.__returned=h}}async forceFetch(t,e={}){const i=await this.fetch(t,e);if(void 0===i)throw new Error("fetch() returned undefined");return i}memo(t,e={}){const i=this.#a;if(!i)throw new Error("no memoMethod provided to constructor");const{context:s,forceRefresh:o,...h}=e,n=this.get(t,h);if(!o&&void 0!==n)return n;const a=i(t,n,{options:h,context:s});return this.set(t,a,h),a}get(t,e={}){const{allowStale:i=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:o=this.noDeleteOnStaleGet,status:h}=e,n=this.#c.get(t);if(void 0!==n){const e=this.#u[n],a=this.#k(e);return h&&this.#W(h,n),this.#E(n)?(h&&(h.get="stale"),a?(h&&i&&void 0!==e.__staleWhileFetching&&(h.returnedStale=!0),i?e.__staleWhileFetching:void 0):(o||this.#M(t,"expire"),h&&i&&(h.returnedStale=!0),i?e:void 0)):(h&&(h.get="hit"),a?e.__staleWhileFetching:(this.#_(n),s&&this.#R(n),e))}h&&(h.get="miss")}#N(t,e){this.#p[e]=t,this.#f[t]=e}#_(t){t!==this.#v&&(t===this.#g?this.#g=this.#f[t]:this.#N(this.#p[t],this.#f[t]),this.#N(this.#v,t),this.#v=t)}delete(t){return this.#M(t,"delete")}#M(t,e){let i=!1;if(0!==this.#r){const s=this.#c.get(t);if(void 0!==s)if(i=!0,1===this.#r)this.#H(e);else{this.#B(s);const i=this.#u[s];if(this.#k(i)?i.__abortController.abort(new Error("deleted")):(this.#A||this.#F)&&(this.#A&&this.#s?.(i,t,e),this.#F&&this.#m?.push([i,t,e])),this.#c.delete(t),this.#d[s]=void 0,this.#u[s]=void 0,s===this.#v)this.#v=this.#p[s];else if(s===this.#g)this.#g=this.#f[s];else{const t=this.#p[s];this.#f[t]=this.#f[s];const e=this.#f[s];this.#p[e]=this.#p[s]}this.#r--,this.#S.push(s)}}if(this.#F&&this.#m?.length){const t=this.#m;let e;for(;e=t?.shift();)this.#h?.(...e)}return i}clear(){return this.#H("delete")}#H(t){for(const e of this.#O({allowStale:!0})){const i=this.#u[e];if(this.#k(i))i.__abortController.abort(new Error("deleted"));else{const s=this.#d[e];this.#A&&this.#s?.(i,s,t),this.#F&&this.#m?.push([i,s,t])}}if(this.#c.clear(),this.#u.fill(void 0),this.#d.fill(void 0),this.#w&&this.#z&&(this.#w.fill(0),this.#z.fill(0)),this.#y&&this.#y.fill(0),this.#g=0,this.#v=0,this.#S.length=0,this.#l=0,this.#r=0,this.#F&&this.#m){const t=this.#m;let e;for(;e=t?.shift();)this.#h?.(...e)}}}