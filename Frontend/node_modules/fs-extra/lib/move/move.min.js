"use strict";const fs=require("../fs"),path=require("path"),{copy:copy}=require("../copy"),{remove:remove}=require("../remove"),{mkdirp:mkdirp}=require("../mkdirs"),{pathExists:pathExists}=require("../path-exists"),stat=require("../util/stat");async function move(e,t,r={}){const a=r.overwrite||r.clobber||!1,{srcStat:s,isChangingCase:i=!1}=await stat.checkPaths(e,t,"move",r);await stat.checkParentPaths(e,s,t,"move");const o=path.dirname(t);return path.parse(o).root!==o&&await mkdirp(o),doRename(e,t,a,i)}async function doRename(e,t,r,a){if(!a)if(r)await remove(t);else if(await pathExists(t))throw new Error("dest already exists.");try{await fs.rename(e,t)}catch(a){if("EXDEV"!==a.code)throw a;await moveAcrossDevice(e,t,r)}}async function moveAcrossDevice(e,t,r){const a={overwrite:r,errorOnExist:!0,preserveTimestamps:!0};return await copy(e,t,a),remove(e)}module.exports=move;