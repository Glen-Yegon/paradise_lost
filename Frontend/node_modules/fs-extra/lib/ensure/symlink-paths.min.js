"use strict";const path=require("path"),fs=require("../fs"),{pathExists:pathExists}=require("../path-exists"),u=require("universalify").fromPromise;async function symlinkPaths(t,s){if(path.isAbsolute(t)){try{await fs.lstat(t)}catch(t){throw t.message=t.message.replace("lstat","ensureSymlink"),t}return{toCwd:t,toDst:t}}const e=path.dirname(s),a=path.join(e,t);if(await pathExists(a))return{toCwd:a,toDst:t};try{await fs.lstat(t)}catch(t){throw t.message=t.message.replace("lstat","ensureSymlink"),t}return{toCwd:t,toDst:path.relative(e,t)}}function symlinkPathsSync(t,s){if(path.isAbsolute(t)){if(!fs.existsSync(t))throw new Error("absolute srcpath does not exist");return{toCwd:t,toDst:t}}const e=path.dirname(s),a=path.join(e,t);if(fs.existsSync(a))return{toCwd:a,toDst:t};if(!fs.existsSync(t))throw new Error("relative srcpath does not exist");return{toCwd:t,toDst:path.relative(e,t)}}module.exports={symlinkPaths:u(symlinkPaths),symlinkPathsSync:symlinkPathsSync};